<?php

namespace App\Entity\Submission;

use App\Entity\JsonUpdatableInterface;
use App\Entity\SoftDeletableInterface;
use App\Entity\Traits\IdentifierAutogeneratedTrait;
use Doctrine\ORM\Mapping as ORM;
use Gedmo\Blameable\Traits\BlameableEntity;
use Gedmo\Timestampable\Traits\TimestampableEntity;

/**
 * To be able to update the schema, temporary remove the settings 'schema_filter' in the doctrine.yml config file.
 *
 * This table will be partitioned in prod env, we need to include in unique keys all columns used to partition the table
 * https://dev.mysql.com/doc/refman/8.0/en/partitioning-limitations-partitioning-keys-unique-keys.html
 *
 * @ORM\Entity(repositoryClass="App\Repository\Submission\AndiSubmissionRepository")
 * @ORM\Table(
 *   name="submission",
 *   uniqueConstraints={
 *     @ORM\UniqueConstraint(name="submission_unique_identifier_udx", columns={"week_calendar_id", "submission_unique_identifier"}),
 *     @ORM\UniqueConstraint(name="submission_identifier_udx", columns={"week_calendar_id", "submission_identifier"}),
 *     @ORM\UniqueConstraint(name="submission_identifier_year_week_counter_udx", columns={"week_calendar_id", "submission_identifier_year", "submission_identifier_week", "submission_identifier_counter"}),
 *  },
 *	 indexes={
 *      @ORM\Index(columns={"reception_date"}),
 *      @ORM\Index(columns={"collection_date"}),
 *      @ORM\Index(columns={"submission_type_version_id"}),
 *      @ORM\Index(columns={"week_calendar_id"}),
 *      @ORM\Index(columns={"day_calendar_id"}),
 *      @ORM\Index(columns={"site_id"}),
 *      @ORM\Index(columns={"informant_id"}),
 *      @ORM\Index(columns={"submission_unique_identifier"}),
 *      @ORM\Index(columns={"submission_identifier"}),
 *      @ORM\Index(columns={"submission_identifier_counter"}),
 *      @ORM\Index(columns={"submission_identifier_week"}),
 *      @ORM\Index(columns={"submission_identifier_year"}),
 *  })
 */
class AndiSubmission implements JsonUpdatableInterface, SoftDeletableInterface
{
    use IdentifierAutogeneratedTrait;
    use TimestampableEntity;
    use BlameableEntity;
    // Columns
    public const SUBMISSION_ID = 'e.id';
    public const SUBMISSION_IDENTIFIER = 'e.submissionIdentifier';
    public const SUBMISSION_LATITUDE = 'e.latitude';
    public const SUBMISSION_LONGITUDE = 'e.longitude';
    public const SUBMISSION_DELETED = 'e.deleted';
    public const SUBMISSION_ORIGINAL_ID = 'e.originalSubmissionId';
    public const SUBMISSION_UPDATED_BY = 'e.updatedBy';
    public const SUBMISSION_UPDATED_AT = 'e.updatedAt';

    // Disease info linked to the submission
    public const SUBMISSION_DISEASE_ID = 'dsub.id';
    public const SUBMISSION_DISEASE_NAME = 'dsub.name';

    // Informant info
    public const SUBMISSION_INFORMANT_NAME = 'i.name';
    public const SUBMISSION_INFORMANT_PHONE_NUMBER = 'i.phoneNumber';

    // Site Info
    public const SITE_DATA_COLUMN_ID = 's.id';

    /**
     * @ORM\Column(type="datetime")
     */
    private \DateTime $receptionDate;

    /**
     * @ORM\Column(type="datetime")
     */
    private \DateTime $collectionDate;

    /**
     * @ORM\Column(type="integer")
     */
    private int $submissionTypeVersionId;

    /**
     * @ORM\Column(type="integer")
     */
    private int $weekCalendarId;

    /**
     * @ORM\Column(type="integer")
     */
    private int $dayCalendarId;

    /**
     * @ORM\Column(type="integer")
     */
    private int $siteId;

    /**
     * @ORM\Column(type="integer")
     */
    private int $informantId;

    /**
     * @var ?integer
     * @ORM\Column(type="integer", nullable=true)
     */
    private ?int $originalSubmissionId = null;

    /**
     * @ORM\Column(type="string")
     */
    private string $submissionIdentifier;

    /**
     * @ORM\Column(type="integer")
     */
    private int $submissionIdentifierYear;

    /**
     * @ORM\Column(type="integer")
     */
    private int $submissionIdentifierWeek;

    /**
     * @ORM\Column(type="integer")
     */
    private int $submissionIdentifierCounter;

    /**
     * @var ?string
     * @ORM\Column(type="string", nullable=true)
     */
    private ?string $submissionUniqueIdentifier;

    /**
     * @var ?integer
     * @ORM\Column(type="integer", nullable=true)
     */
    private ?int $investigationId = null;

    /**
     * @var ?float
     * @ORM\Column(type="decimal", precision=10, scale=8, nullable=true)
     */
    private ?float $latitude = null;

    /**
     * @var ?float
     * @ORM\Column(type="decimal", precision=11, scale=8, nullable=true)
     */
    private ?float $longitude = null;

    /**
     * @ORM\Column(type="text")
     */
    private string $rawData;

    /**
     * @var ?array
     * @ORM\Column(type="json", nullable=true)
     */
    private ?array $jsonData;

    /**
     * @ORM\Column(type="boolean", nullable=false, options={"default" = false})
     */
    private bool $deleted = false;

    public function getReceptionDate(): \DateTime
    {
        return $this->receptionDate;
    }

    public function setReceptionDate(\DateTime $receptionDate): void
    {
        $this->receptionDate = $receptionDate;
    }

    public function getCollectionDate(): \DateTime
    {
        return $this->collectionDate;
    }

    public function setCollectionDate(\DateTime $collectionDate): void
    {
        $this->collectionDate = $collectionDate;
    }

    public function getSubmissionTypeVersionId(): int
    {
        return $this->submissionTypeVersionId;
    }

    public function setSubmissionTypeVersionId(int $submissionTypeVersionId): void
    {
        $this->submissionTypeVersionId = $submissionTypeVersionId;
    }

    public function getWeekCalendarId(): int
    {
        return $this->weekCalendarId;
    }

    public function setWeekCalendarId(int $weekCalendarId): void
    {
        $this->weekCalendarId = $weekCalendarId;
    }

    public function getDayCalendarId(): int
    {
        return $this->dayCalendarId;
    }

    public function setDayCalendarId(int $dayCalendarId): void
    {
        $this->dayCalendarId = $dayCalendarId;
    }

    public function getSiteId(): int
    {
        return $this->siteId;
    }

    public function setSiteId(int $siteId): void
    {
        $this->siteId = $siteId;
    }

    public function getInformantId(): int
    {
        return $this->informantId;
    }

    public function setInformantId(int $informantId): void
    {
        $this->informantId = $informantId;
    }

    /**
     * @return int
     */
    public function getOriginalSubmissionId(): ?int
    {
        return $this->originalSubmissionId;
    }

    /**
     * @param ?int $originalSubmissionId
     */
    public function setOriginalSubmissionId(?int $originalSubmissionId): void
    {
        $this->originalSubmissionId = $originalSubmissionId;
    }

    public function getSubmissionIdentifier(): string
    {
        return $this->submissionIdentifier;
    }

    public function setSubmissionIdentifier(string $submissionIdentifier): void
    {
        $this->submissionIdentifier = $submissionIdentifier;
    }

    public function getSubmissionIdentifierYear(): int
    {
        return $this->submissionIdentifierYear;
    }

    public function setSubmissionIdentifierYear(int $submissionIdentifierYear): void
    {
        $this->submissionIdentifierYear = $submissionIdentifierYear;
    }

    public function getSubmissionIdentifierWeek(): int
    {
        return $this->submissionIdentifierWeek;
    }

    public function setSubmissionIdentifierWeek(int $submissionIdentifierWeek): void
    {
        $this->submissionIdentifierWeek = $submissionIdentifierWeek;
    }

    public function getSubmissionIdentifierCounter(): int
    {
        return $this->submissionIdentifierCounter;
    }

    public function setSubmissionIdentifierCounter(int $submissionIdentifierCounter): void
    {
        $this->submissionIdentifierCounter = $submissionIdentifierCounter;
    }

    public function getSubmissionUniqueIdentifier(): string
    {
        return $this->submissionUniqueIdentifier;
    }

    public function setSubmissionUniqueIdentifier(string $submissionUniqueIdentifier): void
    {
        $this->submissionUniqueIdentifier = $submissionUniqueIdentifier;
    }

    public function getInvestigationId(): ?int
    {
        return $this->investigationId;
    }

    public function setInvestigationId(?int $investigationId): void
    {
        $this->investigationId = $investigationId;
    }

    public function getLatitude(): ?float
    {
        return $this->latitude;
    }

    public function setLatitude(?float $latitude): void
    {
        $this->latitude = $latitude;
    }

    public function getLongitude(): ?float
    {
        return $this->longitude;
    }

    public function setLongitude(?float $longitude): void
    {
        $this->longitude = $longitude;
    }

    public function getRawData(): string
    {
        return $this->rawData;
    }

    public function setRawData(string $rawData): void
    {
        $this->rawData = $rawData;
    }

    /**
     * @return array
     */
    public function getJsonData(): ?array
    {
        return $this->jsonData;
    }

    public function setJsonData(?array $jsonData): void
    {
        $this->jsonData = $jsonData;
    }

    public function isDeleted(): bool
    {
        return $this->deleted;
    }

    public function setDeleted(bool $deleted): void
    {
        $this->deleted = $deleted;
    }
}
