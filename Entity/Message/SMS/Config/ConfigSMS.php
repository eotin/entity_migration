<?php

namespace App\Entity\Message\SMS\Config;

use App\Entity\Configuration\BatchConfigurationChange;
use App\Entity\Core\Informant;
use App\Entity\Message\SMS\OutgoingSMS;
use App\Entity\Traits\IdentifierAutogeneratedTrait;
use Doctrine\ORM\Mapping as ORM;
use Gedmo\Timestampable\Traits\TimestampableEntity;

/**
 *  @ORM\Entity(repositoryClass="App\Repository\Message\SMS\Config\ConfigSMSRepository")
 */
class ConfigSMS
{
    use TimestampableEntity;
    use IdentifierAutogeneratedTrait;

    /**
     * @ORM\Column(type="integer", nullable=false)
     */
    private int $configSmsId;

    /**
     * @ORM\Column(type="string", nullable=false)
     */
    private string $phoneNumber;

    /**
     * @ORM\Column(type="string", nullable=false)
     */
    private string $gatewayNumber;

    /**
     * @ORM\Column(type="text", nullable=false)
     */
    private string $encryptMessage;

    /**
     * @ORM\Column(type="text", nullable=false)
     */
    private string $decryptMessage;

    /**
     * @ORM\Column(type="string", nullable=false)
     */
    private string $value;

    /**
     * @ORM\ManyToOne(targetEntity="App\Entity\Core\Informant")
     * @ORM\JoinColumn(name="FK_informantId", referencedColumnName="id")
     */
    private ?Informant $informant;

    /**
     * @ORM\ManyToOne(targetEntity="App\Entity\Message\SMS\OutgoingSMS")
     * @ORM\JoinColumn(name="FK_outgoingSmsId", referencedColumnName="id")
     */
    private ?OutgoingSMS $outgoingSMS;

    /**
     * @ORM\ManyToOne(targetEntity="App\Entity\Configuration\BatchConfigurationChange")
     * @ORM\JoinColumn(name="FK_batchConfigurationChange", referencedColumnName="id")
     */
    private ?BatchConfigurationChange $batchConfigurationChange;

    public function __construct(int $configSmsId,
                                string $phoneNumber,
                                string $gatewayNumber,
                                string $encryptMessage,
                                string $decryptMessage,
                                string $value,
                                ?Informant $informant,
                                ?BatchConfigurationChange $batchConfigurationChange)
    {
        $this->configSmsId = $configSmsId;
        $this->phoneNumber = $phoneNumber;
        $this->gatewayNumber = $gatewayNumber;
        $this->encryptMessage = $encryptMessage;
        $this->decryptMessage = $decryptMessage;
        $this->value = $value;
        $this->informant = $informant;
        $this->batchConfigurationChange = $batchConfigurationChange;
    }

    public function getConfigSmsId(): int
    {
        return $this->configSmsId;
    }

    public function setConfigSmsId(int $configSmsId): void
    {
        $this->configSmsId = $configSmsId;
    }

    public function getPhoneNumber(): string
    {
        return $this->phoneNumber;
    }

    public function setPhoneNumber(string $phoneNumber): void
    {
        $this->phoneNumber = $phoneNumber;
    }

    public function getGatewayNumber(): string
    {
        return $this->gatewayNumber;
    }

    public function setGatewayNumber(string $gatewayNumber): void
    {
        $this->gatewayNumber = $gatewayNumber;
    }

    public function getEncryptMessage(): string
    {
        return $this->encryptMessage;
    }

    public function setEncryptMessage(string $encryptMessage): void
    {
        $this->encryptMessage = $encryptMessage;
    }

    public function getDecryptMessage(): string
    {
        return $this->decryptMessage;
    }

    public function setDecryptMessage(string $decryptMessage): void
    {
        $this->decryptMessage = $decryptMessage;
    }

    public function getInformant(): ?Informant
    {
        return $this->informant;
    }

    public function setInformant(?Informant $informant): void
    {
        $this->informant = $informant;
    }

    public function getOutgoingSMS(): ?OutgoingSMS
    {
        return $this->outgoingSMS;
    }

    public function setOutgoingSMS(?OutgoingSMS $outgoingSMS): void
    {
        $this->outgoingSMS = $outgoingSMS;
    }

    public function getValue(): string
    {
        return $this->value;
    }

    public function setValue(string $value): void
    {
        $this->value = $value;
    }

    public function getBatchConfigurationChange(): ?BatchConfigurationChange
    {
        return $this->batchConfigurationChange;
    }

    public function setBatchConfigurationChange(?BatchConfigurationChange $batchConfigurationChange): void
    {
        $this->batchConfigurationChange = $batchConfigurationChange;
    }
}
