<?php

namespace App\Entity\Cases\Data;

use App\Entity\Traits\IdentifierAutogeneratedTrait;
use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\Mapping as ORM;

/**
 *
 * @ORM\Entity(repositoryClass="App\Repository\Cases\Data\CaseDataColumnGroupRepository")
 * @ORM\Table(uniqueConstraints=
 *     { @ORM\UniqueConstraint(name="case_data_column_group_udx", columns={"code"}) }
 * )
 */
class CaseDataColumnGroup
{
    use IdentifierAutogeneratedTrait;

    /**
     * @ORM\Column(type="string", nullable=false)
     */
    private string $name;

    /**
     * @var ?string
     * @ORM\Column(type="string", nullable=true)
     */
    private ?string $code;

    /**
     * @var ?string
     * @ORM\Column(type="string", nullable=true)
     */
    private ?string $icon;

    /**
     * @var ?string
     * @ORM\Column(type="string", nullable=true)
     */
    private ?string $sourceIcon;

    /**
     * @ORM\Column(type="string", nullable=false, options={"default" = "content"})
     *
     * Where the group should be displayed.
     * Possible values are:
     *  - "content"
     *  - "header"
     */
    private string $displayType;

    /**
     * @ORM\OneToMany(targetEntity="CaseDataColumnGroupMembership", mappedBy="caseDataColumnGroup")
     */
    private Collection $caseDataColumnGroupMemberships;

    /**
     * @ORM\OneToMany(targetEntity="CaseDataColumnGroupTabMembership", mappedBy="caseDataColumnGroup")
     */
    private Collection $caseDataColumnGroupTabMemberships;

    public function getUniqueCaseDataColumns(): array
    {
        $columns = [];

        $columnGroupMemberships = $this->getCaseDataColumnGroupMemberships();

        /** @var CaseDataColumnGroupMembership $columnGroupMembership */
        foreach ($columnGroupMemberships as $columnGroupMembership) {
            if (! in_array($columnGroupMembership->getCaseDataColumn()->getId(), $columns, true)) {
                $columns[$columnGroupMembership->getCaseDataColumn()->getId()] = $columnGroupMembership->getCaseDataColumn();
            }
        }

        return $columns;
    }

    public function getName(): string
    {
        return $this->name;
    }

    public function setName(string $name): void
    {
        $this->name = $name;
    }

    public function getCode(): ?string
    {
        return $this->code;
    }

    public function setCode(?string $code): void
    {
        $this->code = $code;
    }

    public function getIcon(): ?string
    {
        return $this->icon;
    }

    public function setIcon(?string $icon): void
    {
        $this->icon = $icon;
    }

    public function getSourceIcon(): ?string
    {
        return $this->sourceIcon;
    }

    public function setSourceIcon(?string $sourceIcon): void
    {
        $this->sourceIcon = $sourceIcon;
    }

    public function getDisplayType(): string
    {
        return $this->displayType;
    }

    public function setDisplayType(string $displayType): void
    {
        $this->displayType = $displayType;
    }

    public function getCaseDataColumnGroupMemberships(): Collection
    {
        return $this->caseDataColumnGroupMemberships;
    }

    public function setCaseDataColumnGroupMemberships(Collection $caseDataColumnGroupMemberships): void
    {
        $this->caseDataColumnGroupMemberships = $caseDataColumnGroupMemberships;
    }

    public function getCaseDataColumnGroupTabMemberships(): Collection
    {
        return $this->caseDataColumnGroupTabMemberships;
    }

    public function setCaseDataColumnGroupTabMemberships(Collection $caseDataColumnGroupTabMemberships): void
    {
        $this->caseDataColumnGroupTabMemberships = $caseDataColumnGroupTabMemberships;
    }
}
