<?php

namespace App\Entity\Configuration;

use App\Entity\Core\Site;
use App\Entity\Traits\IdentifierAutogeneratedTrait;
use Doctrine\ORM\Mapping as ORM;
use Gedmo\Timestampable\Traits\TimestampableEntity;

/**
 * Store batch of configuration change.
 *
 * @ORM\Entity(repositoryClass="App\Repository\Configuration\BatchConfigurationChangeRepository")
 */
class BatchConfigurationChange
{
    use IdentifierAutogeneratedTrait;
    use TimestampableEntity;

    /**
     * @ORM\ManyToOne(targetEntity="App\Entity\Core\Site", inversedBy="batchConfigurations")
     * @ORM\JoinColumn(name="FK_siteId", referencedColumnName="id", nullable=false)
     */
    protected Site $site;

    /**
     * @ORM\Column(type="string", nullable=true)
     */
    protected ?string $configBefore = null;

    /**
     * @ORM\Column(type="string")
     */
    protected string $configAfter;

    /**
     * @ORM\ManyToOne(targetEntity="MobileConfigurationProperty")
     * @ORM\JoinColumn(name="FK_mobileConfigurationPropertyId", referencedColumnName="id")
     */
    private MobileConfigurationProperty $mobileConfigurationProperty;

    /**
     * @ORM\Column(type="string", nullable=false)
     */
    protected string $status;

    public function getSite(): Site
    {
        return $this->site;
    }

    public function setSite(Site $site): void
    {
        $this->site = $site;
    }

    public function getConfigBefore(): ?string
    {
        return $this->configBefore;
    }

    public function setConfigBefore(?string $configBefore): void
    {
        $this->configBefore = $configBefore;
    }

    public function getConfigAfter(): string
    {
        return $this->configAfter;
    }

    public function setConfigAfter(string $configAfter): void
    {
        $this->configAfter = $configAfter;
    }

    public function getMobileConfigurationProperty(): MobileConfigurationProperty
    {
        return $this->mobileConfigurationProperty;
    }

    public function setMobileConfigurationProperty(MobileConfigurationProperty $mobileConfigurationProperty): void
    {
        $this->mobileConfigurationProperty = $mobileConfigurationProperty;
    }

    public function getStatus(): string
    {
        return $this->status;
    }

    public function setStatus(string $status): void
    {
        $this->status = $status;
    }
}
