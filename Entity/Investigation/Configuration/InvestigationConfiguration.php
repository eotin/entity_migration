<?php

namespace App\Entity\Investigation\Configuration;

use App\Entity\Traits\IdentifierAutogeneratedTrait;
use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\Mapping as ORM;

/**
 * Class InvestigationConfiguration.
 *
 * @ORM\Entity(repositoryClass="App\Repository\Investigation\Configuration\InvestigationConfigurationRepository")
 *
 * ONA configuration example : {"password": "xxx", "username": "xxx", "form_string_id": "CAF_DSNO", "forms_list_rest_end_point": "https://api.whonghub.org/api/v1/data?format=json", "verify_peer_ssl_certificate": "true", "check_common_name_in_ssl_certificate": "true"}
 */
class InvestigationConfiguration
{
    use IdentifierAutogeneratedTrait;
    public const CONFIGURATION_TYPE_ONA = 'ONA';
    public const CONFIGURATION_TYPE_FHIR = 'FHIR';

    /**
     * @ORM\ManyToMany(targetEntity="App\Entity\Disease\Disease")
     */
    private Collection $diseases;

    /**
     * @ORM\ManyToMany(targetEntity="App\Entity\Core\Site", inversedBy="investigationConfigurations")
     */
    private Collection $sites;

    /**
     * @ORM\OneToMany(targetEntity="App\Entity\Investigation\InvestigationField", mappedBy="investigationConfiguration")
     */
    private Collection $investigationFields;

    /**
     * @ORM\Column(type="string")
     */
    private string $configurationType;

    /**
     * @ORM\Column(type="boolean")
     */
    private bool $enabled = false;

    /**
     * @var ?array
     * @ORM\Column(type="json", nullable=true)
     */
    private ?array $configuration;

    public function getDiseases(): Collection
    {
        return $this->diseases;
    }

    public function setDiseases(Collection $diseases): void
    {
        $this->diseases = $diseases;
    }

    public function getSites(): Collection
    {
        return $this->sites;
    }

    public function setSites(Collection $sites): void
    {
        $this->sites = $sites;
    }

    public function getInvestigationFields(): Collection
    {
        return $this->investigationFields;
    }

    public function setInvestigationFields(Collection $investigationFields): void
    {
        $this->investigationFields = $investigationFields;
    }

    public function getConfigurationType(): string
    {
        return $this->configurationType;
    }

    public function setConfigurationType(string $configurationType): void
    {
        $this->configurationType = $configurationType;
    }

    public function isEnabled(): bool
    {
        return $this->enabled;
    }

    public function setEnabled(bool $enabled): void
    {
        $this->enabled = $enabled;
    }

    public function getConfiguration(): ?array
    {
        return $this->configuration;
    }

    public function setConfiguration(?array $configuration): void
    {
        $this->configuration = $configuration;
    }

    public function __toString()
    {
        return sprintf('Investigation Configuration [%s]', $this->getId());
    }
}
