<?php

namespace App\Entity\Gateway;

use App\Entity\Core\Site;
use App\Entity\Traits\IdentifierAutogeneratedTrait;
use Doctrine\ORM\Mapping as ORM;
use Gedmo\Timestampable\Traits\TimestampableEntity;

/**
 * Class GatewayDevice.
 *
 * @ORM\Entity(repositoryClass="App\Repository\Gateway\GatewayDeviceRepository")
 */
class GatewayDevice
{
    use TimestampableEntity;
    use IdentifierAutogeneratedTrait;

    /**
     * @ORM\Column(type="string", nullable=false)
     */
    private $gatewayNumber;

    /**
     * @ORM\ManyToOne(targetEntity="App\Entity\Core\Site", inversedBy="gatewayDevices")
     * @ORM\JoinColumn(name="FK_siteId", referencedColumnName="id", nullable=true)
     */
    private ?Site $site;

    /**
     * @ORM\Column(type="string", nullable=true)
     */
    private $operator;

    /**
     * @ORM\Column(type="string", nullable=true)
     */
    private $manufacturer;

    /**
     * @ORM\Column(type="string", nullable=true)
     */
    private $model;

    /**
     * @ORM\Column(type="string", nullable=true)
     */
    private $sdk;

    /**
     * @ORM\Column(type="string", nullable=true)
     */
    private $versionName;

    /**
     * @ORM\Column(type="string", nullable=true)
     */
    private $version;

    /**
     * @ORM\Column(type="integer", nullable=true)
     */
    private $battery;

    /**
     * @ORM\Column(type="integer", nullable=true)
     */
    private $power;

    /**
     * @ORM\Column(type="integer", nullable=true)
     */
    private $pollInterval;

    /**
     * @ORM\Column(type="boolean", nullable=true)
     */
    private $selfTestResult;

    /**
     * @ORM\Column(type="text", nullable=true)
     */
    private $selfTestResultMessage;

    /**
     * @ORM\Column(type="boolean", nullable=true)
     */
    private $operatorTestResult;

    /**
     * @ORM\Column(type="text", nullable=true)
     */
    private $operatorTestResultMessage;

    /**
     * @ORM\Column(type="boolean", nullable=true)
     */
    private $selfRegistration;

    /**
     * @return mixed
     */
    public function getGatewayNumber()
    {
        return $this->gatewayNumber;
    }

    /**
     * @param mixed $gatewayNumber
     */
    public function setGatewayNumber($gatewayNumber): void
    {
        $this->gatewayNumber = $gatewayNumber;
    }

    /**
     * @return mixed
     */
    public function getSite(): ?Site
    {
        return $this->site;
    }

    public function setSite(?Site $site): void
    {
        $this->site = $site;
    }

    /**
     * @return mixed
     */
    public function getOperator()
    {
        return $this->operator;
    }

    /**
     * @param mixed $operator
     */
    public function setOperator($operator): void
    {
        $this->operator = $operator;
    }

    /**
     * @return mixed
     */
    public function getManufacturer()
    {
        return $this->manufacturer;
    }

    /**
     * @param mixed $manufacturer
     */
    public function setManufacturer($manufacturer): void
    {
        $this->manufacturer = $manufacturer;
    }

    /**
     * @return mixed
     */
    public function getModel()
    {
        return $this->model;
    }

    /**
     * @param mixed $model
     */
    public function setModel($model): void
    {
        $this->model = $model;
    }

    /**
     * @return mixed
     */
    public function getSdk()
    {
        return $this->sdk;
    }

    /**
     * @param mixed $sdk
     */
    public function setSdk($sdk): void
    {
        $this->sdk = $sdk;
    }

    /**
     * @return mixed
     */
    public function getVersionName()
    {
        return $this->versionName;
    }

    /**
     * @param mixed $versionName
     */
    public function setVersionName($versionName): void
    {
        $this->versionName = $versionName;
    }

    /**
     * @return mixed
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     * @param mixed $version
     */
    public function setVersion($version): void
    {
        $this->version = $version;
    }

    /**
     * @return mixed
     */
    public function getBattery()
    {
        return $this->battery;
    }

    /**
     * @param mixed $battery
     */
    public function setBattery($battery): void
    {
        $this->battery = $battery;
    }

    /**
     * @return mixed
     */
    public function getPower()
    {
        return $this->power;
    }

    /**
     * @param mixed $power
     */
    public function setPower($power): void
    {
        $this->power = $power;
    }

    /**
     * @return mixed
     */
    public function getPollInterval()
    {
        return $this->pollInterval;
    }

    /**
     * @param mixed $pollInterval
     */
    public function setPollInterval($pollInterval): void
    {
        $this->pollInterval = $pollInterval;
    }

    /**
     * @return mixed
     */
    public function getSelfTestResult()
    {
        return $this->selfTestResult;
    }

    /**
     * @param mixed $selfTestResult
     */
    public function setSelfTestResult($selfTestResult): void
    {
        $this->selfTestResult = $selfTestResult;
    }

    /**
     * @return mixed
     */
    public function getSelfTestResultMessage()
    {
        return $this->selfTestResultMessage;
    }

    /**
     * @param mixed $selfTestResultMessage
     */
    public function setSelfTestResultMessage($selfTestResultMessage): void
    {
        $this->selfTestResultMessage = $selfTestResultMessage;
    }

    /**
     * @return mixed
     */
    public function getOperatorTestResult()
    {
        return $this->operatorTestResult;
    }

    /**
     * @param mixed $operatorTestResult
     */
    public function setOperatorTestResult($operatorTestResult): void
    {
        $this->operatorTestResult = $operatorTestResult;
    }

    /**
     * @return mixed
     */
    public function getOperatorTestResultMessage()
    {
        return $this->operatorTestResultMessage;
    }

    /**
     * @param mixed $operatorTestResultMessage
     */
    public function setOperatorTestResultMessage($operatorTestResultMessage): void
    {
        $this->operatorTestResultMessage = $operatorTestResultMessage;
    }

    /**
     * @return mixed
     */
    public function getSelfRegistration()
    {
        return $this->selfRegistration;
    }

    /**
     * @param mixed $selfRegistration
     */
    public function setSelfRegistration($selfRegistration): void
    {
        $this->selfRegistration = $selfRegistration;
    }

    public function getGatewayStatus(): string
    {
        return 'N/A';
    }

    public function getNrPending(): int
    {
        return 0;
    }

    public function getFullModel(): string
    {
        return $this->manufacturer.' '.$this->model;
    }

    public function getPowerStatus(): array
    {
        return [$this->battery, $this->power];
    }
}
