<?php

namespace App\Entity\AlertRecipient;

use App\Entity\Core\Investigator;
use App\Entity\Core\Site;
use App\Entity\Traits\IdentifierAutogeneratedTrait;
use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Class InvestigatorSiteSubmissionTypeVersion.
 *
 * @ORM\Entity(repositoryClass="App\Repository\AlertRecipient\InvestigatorSiteSubmissionTypeVersionRepository")
 * @ORM\Table(
 *     name="investigator_site",
 *     uniqueConstraints={
 *		@ORM\UniqueConstraint(name="investigator_site_udx", columns={"FK_siteId", "FK_investigatorId"}),
 *	})
 *
 * @UniqueEntity(fields={"site", "investigator"}, message="The configuration for this site and Alert recipient already exists")
 */
class InvestigatorSiteSubmissionTypeVersion
{
    use IdentifierAutogeneratedTrait;

    /**
     * @ORM\ManyToOne(targetEntity="App\Entity\Core\Site", inversedBy="investigatorSiteSubmissionTypeVersion")
     * @ORM\JoinColumn(name="FK_siteId", referencedColumnName="id", nullable=false)
     * @Assert\NotNull()
     */
    private Site $site;

    /**
     * @ORM\ManyToOne(targetEntity="App\Entity\Core\Investigator", inversedBy="investigatorSiteSubmissionTypeVersion")
     * @ORM\JoinColumn(name="FK_investigatorId", referencedColumnName="id", nullable=false)
     * @Assert\NotNull()
     */
    private Investigator $investigator;

    /**
     * @ORM\ManyToMany(targetEntity="App\Entity\Submission\AndiSubmissionTypeVersion", cascade={"persist"}))
     * @ORM\JoinTable(name="investigator_site_submission_type_version",
     *     joinColumns={@ORM\JoinColumn(name="FK_investigatorSiteId", referencedColumnName="id")},
     *      inverseJoinColumns={@ORM\JoinColumn(name="FK_submissionTypeVersionId", referencedColumnName="id")}
     *  )
     */
    protected Collection $submissionTypeVersions;

    /***** Add Rules for each relation Site - Investigator - Submission Type ****/

    /**
     * @return Site
     */
    public function getSite(): Site
    {
        return $this->site;
    }

    /**
     * @param Site $site
     */
    public function setSite(Site $site): void
    {
        $this->site = $site;
    }

    /**
     * @return Investigator
     */
    public function getInvestigator(): Investigator
    {
        return $this->investigator;
    }

    /**
     * @param Investigator $investigator
     */
    public function setInvestigator(Investigator $investigator): void
    {
        $this->investigator = $investigator;
    }

    /**
     * @return Collection
     */
    public function getSubmissionTypeVersions(): Collection
    {
        return $this->submissionTypeVersions;
    }

    /**
     * @param Collection $submissionTypeVersions
     */
    public function setSubmissionTypeVersions(Collection $submissionTypeVersions): void
    {
        $this->submissionTypeVersions = $submissionTypeVersions;
    }
}
