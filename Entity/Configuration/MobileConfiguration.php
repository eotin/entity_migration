<?php

namespace App\Entity\Configuration;

use App\Entity\Core\Informant;
use App\Entity\Message\SMS\Config\ConfigSMS;
use App\Entity\Traits\IdentifierAutogeneratedTrait;
use Doctrine\ORM\Mapping as ORM;
use Gedmo\Timestampable\Traits\TimestampableEntity;

/**
 * @ORM\Entity(repositoryClass="App\Repository\Configuration\MobileConfigurationRepository")
 * @ORM\Table(uniqueConstraints={
 *     @ORM\UniqueConstraint(name="mobile_configuration_udx", columns={"FK_informantId", "FK_mobileConfigurationPropertyId"})
 * })
 */
class MobileConfiguration
{
    use IdentifierAutogeneratedTrait;
    use TimestampableEntity;

    /**
     * @ORM\ManyToOne(targetEntity="App\Entity\Core\Informant")
     * @ORM\JoinColumn(name="FK_informantId", referencedColumnName="id")
     */
    private Informant $informant;

    /**
     * @ORM\ManyToOne(targetEntity="MobileConfigurationProperty")
     * @ORM\JoinColumn(name="FK_mobileConfigurationPropertyId", referencedColumnName="id")
     */
    private MobileConfigurationProperty $mobileConfigurationProperty;

    /**
     * @ORM\Column(type="boolean", options={"default" = false}, nullable=false)
     */
    private bool $upToDate = false;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    private ?\DateTime $upToDateDate;

    /**
     * @ORM\Column(type="string", nullable=true)
     */
    private ?string $upToDateValue;

    /**
     * @ORM\OneToOne(targetEntity="App\Entity\Message\SMS\Config\ConfigSMS")
     * @ORM\JoinColumn(name="FK_configSmsId", referencedColumnName="id")
     */
    private ?ConfigSMS $configSMS;

    public function getInformant(): Informant
    {
        return $this->informant;
    }

    public function setInformant(Informant $informant): void
    {
        $this->informant = $informant;
    }

    public function getMobileConfigurationProperty(): MobileConfigurationProperty
    {
        return $this->mobileConfigurationProperty;
    }

    public function setMobileConfigurationProperty(MobileConfigurationProperty $mobileConfigurationProperty): void
    {
        $this->mobileConfigurationProperty = $mobileConfigurationProperty;
    }

    public function isUpToDate(): bool
    {
        return $this->upToDate;
    }

    public function setUpToDate(bool $upToDate): void
    {
        $this->upToDate = $upToDate;
    }

    public function getUpToDateDate(): ?\DateTime
    {
        return $this->upToDateDate;
    }

    public function setUpToDateDate(?\DateTime $upToDateDate): void
    {
        $this->upToDateDate = $upToDateDate;
    }

    public function getUpToDateValue(): ?string
    {
        return $this->upToDateValue;
    }

    public function setUpToDateValue(?string $upToDateValue): void
    {
        $this->upToDateValue = $upToDateValue;
    }

    public function getConfigSMS(): ?ConfigSMS
    {
        return $this->configSMS;
    }

    public function setConfigSMS(?ConfigSMS $configSMS): void
    {
        $this->configSMS = $configSMS;
    }
}
